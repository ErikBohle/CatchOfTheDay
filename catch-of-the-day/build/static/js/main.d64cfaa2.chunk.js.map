{"version":3,"sources":["helpers.js","components/StorePicker.js","components/Header.js","components/Order.js","components/AddFishForm.js","components/EditFishForm.js","components/Login.js","base.js","components/Inventory.js","sample-fishes.js","components/Fish.js","components/App.js","components/NotFound.js","components/Router.js","index.js"],"names":["formatPrice","cents","toLocaleString","style","currency","rando","arr","Math","floor","random","length","getFunName","adjectives","StorePicker","myInput","React","createRef","goToStore","event","preventDefault","storeName","current","value","props","history","push","className","onSubmit","this","type","ref","required","placeholder","defaultValue","Component","Header","tagline","Order","renderOrder","key","fish","fishes","count","order","isAvailable","status","transitionOptions","classNames","timeout","enter","exit","component","name","price","onClick","removeFromOrder","orderIds","Object","keys","total","reduce","prevTotal","map","AddFishForm","nameRef","priceRef","statusRef","descRef","imageRef","createFish","parseFloat","desc","image","addFish","currentTarget","reset","EditFishForm","handleChange","console","log","updatedFish","updateFish","index","onChange","deleteFish","Login","authenticate","firebaseApp","firebase","initializeApp","apiKey","authDomain","databaseURL","base","Rebase","createClass","database","Inventory","state","uid","owner","authHandler","authData","a","fetch","storeId","context","store","post","data","user","setState","provider","AuthProvider","auth","signInWithPopup","then","logout","signOut","onAuthStateChanged","loadSampleFishes","fish1","fish2","fish3","fish4","fish5","fish6","fish7","fish8","fish9","Fish","details","src","alt","disabled","addToOrder","App","Date","now","sampleFishes","params","match","localStorageRef","localStorage","getItem","JSON","parse","syncState","setItem","stringify","removeBinding","NotFound","Router","BrowserRouter","Switch","Route","exact","path","render","document","querySelector"],"mappings":"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","file":"static/js/main.d64cfaa2.chunk.js","sourcesContent":["export function formatPrice(cents) {\r\n  return (cents / 100).toLocaleString(\"en-US\", {\r\n    style: \"currency\",\r\n    currency: \"USD\"\r\n  });\r\n}\r\n\r\nexport function rando(arr) {\r\n  return arr[Math.floor(Math.random() * arr.length)];\r\n}\r\n\r\nexport function slugify(text) {\r\n  return text\r\n    .toString()\r\n    .toLowerCase()\r\n    .replace(/\\s+/g, \"-\")\r\n    .replace(/[^\\w-]+/g, \"\")\r\n    .replace(/--+/g, \"-\")\r\n    .replace(/^-+/, \"\")\r\n    .replace(/-+$/, \"\");\r\n}\r\n\r\nexport function getFunName() {\r\n  const adjectives = [\r\n    \"adorable\",\r\n    \"beautiful\",\r\n    \"clean\",\r\n    \"drab\",\r\n    \"elegant\",\r\n    \"fancy\",\r\n    \"glamorous\",\r\n    \"handsome\",\r\n    \"long\",\r\n    \"magnificent\",\r\n    \"old-fashioned\",\r\n    \"plain\",\r\n    \"quaint\",\r\n    \"sparkling\",\r\n    \"ugliest\",\r\n    \"unsightly\",\r\n    \"angry\",\r\n    \"bewildered\",\r\n    \"clumsy\",\r\n    \"defeated\",\r\n    \"embarrassed\",\r\n    \"fierce\",\r\n    \"grumpy\",\r\n    \"helpless\",\r\n    \"itchy\",\r\n    \"jealous\",\r\n    \"lazy\",\r\n    \"mysterious\",\r\n    \"nervous\",\r\n    \"obnoxious\",\r\n    \"panicky\",\r\n    \"repulsive\",\r\n    \"scary\",\r\n    \"thoughtless\",\r\n    \"uptight\",\r\n    \"worried\"\r\n  ];\r\n\r\n  const nouns = [\r\n    \"women\",\r\n    \"men\",\r\n    \"children\",\r\n    \"teeth\",\r\n    \"feet\",\r\n    \"people\",\r\n    \"leaves\",\r\n    \"mice\",\r\n    \"geese\",\r\n    \"halves\",\r\n    \"knives\",\r\n    \"wives\",\r\n    \"lives\",\r\n    \"elves\",\r\n    \"loaves\",\r\n    \"potatoes\",\r\n    \"tomatoes\",\r\n    \"cacti\",\r\n    \"foci\",\r\n    \"fungi\",\r\n    \"nuclei\",\r\n    \"syllabuses\",\r\n    \"analyses\",\r\n    \"diagnoses\",\r\n    \"oases\",\r\n    \"theses\",\r\n    \"crises\",\r\n    \"phenomena\",\r\n    \"criteria\",\r\n    \"data\"\r\n  ];\r\n\r\n  return `${rando(adjectives)}-${rando(adjectives)}-${rando(nouns)}`;\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { getFunName } from '../helpers';\r\n\r\nclass StorePicker extends React.Component {\r\n  static propTypes = {\r\n    history: PropTypes.object,\r\n  };\r\n  myInput = React.createRef();\r\n\r\n  goToStore = (event) => {\r\n    // 1. Stop the form from submitting\r\n    event.preventDefault();\r\n    // 2. get the text from that input\r\n    const storeName = this.myInput.current.value;\r\n    // 3. Change the page to /store/whatever-they-entered\r\n    this.props.history.push(`/store/${storeName}`);\r\n  };\r\n  render() {\r\n    return (\r\n      <form className=\"store-selector\" onSubmit={this.goToStore}>\r\n        <h2>Please Enter A Store</h2>\r\n        <input\r\n          type=\"text\"\r\n          ref={this.myInput}\r\n          required\r\n          placeholder=\"Store Name\"\r\n          defaultValue={getFunName()}\r\n        />\r\n        <button type=\"submit\">Visit Store →</button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default StorePicker;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Header = (props) => (\r\n  <header className=\"top\">\r\n    <h1>\r\n      Catch{' '}\r\n      <span className=\"ofThe\">\r\n        <span className=\"of\">Of</span>\r\n        <span className=\"the\">The</span>\r\n      </span>{' '}\r\n      Day\r\n    </h1>\r\n    <h3 className=\"tagline\">\r\n      <span>{props.tagline}</span>\r\n    </h3>\r\n  </header>\r\n);\r\n\r\nHeader.propTypes = {\r\n  tagline: PropTypes.string.isRequired,\r\n};\r\n\r\n// class Header extends React.Component {\r\n//   render() {\r\n//     return (\r\n//       <header className=\"top\">\r\n//         <h1>\r\n//           Catch{' '}\r\n//           <span className=\"ofThe\">\r\n//             <span className=\"of\">Of</span>\r\n//             <span className=\"the\">The</span>\r\n//           </span>{' '}\r\n//           Day\r\n//         </h1>\r\n//         <h3 className=\"tagline\">\r\n//           <span>{this.props.tagline}</span>\r\n//         </h3>\r\n//       </header>\r\n//     );\r\n//   }\r\n// }\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { formatPrice } from '../helpers';\r\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\r\n\r\nclass Order extends React.Component {\r\n  static propTypes = {\r\n    fishes: PropTypes.object,\r\n    order: PropTypes.object,\r\n    removeFromOrder: PropTypes.func,\r\n  };\r\n  renderOrder = (key) => {\r\n    const fish = this.props.fishes[key];\r\n    const count = this.props.order[key];\r\n    const isAvailable = fish && fish.status === 'available';\r\n    const transitionOptions = {\r\n      classNames: 'order',\r\n      key,\r\n      timeout: { enter: 500, exit: 500 },\r\n    };\r\n    // Make sure the fish is loaded before we continue!\r\n    if (!fish) return null;\r\n\r\n    if (!isAvailable) {\r\n      return (\r\n        <CSSTransition {...transitionOptions}>\r\n          <li key={key}>Sorry {fish ? fish.name : 'fish'} is no longer available</li>\r\n        </CSSTransition>\r\n      );\r\n    }\r\n    return (\r\n      <CSSTransition {...transitionOptions}>\r\n        <li key={key}>\r\n          <span>\r\n            <TransitionGroup component=\"span\" className=\"count\">\r\n              <CSSTransition classNames=\"count\" key={count} timeout={{ enter: 500, exit: 500 }}>\r\n                <span>{count}</span>\r\n              </CSSTransition>\r\n            </TransitionGroup>\r\n            lbs {fish.name}\r\n            {formatPrice(count * fish.price)}\r\n            <button onClick={() => this.props.removeFromOrder(key)}>&times;</button>\r\n          </span>\r\n        </li>\r\n      </CSSTransition>\r\n    );\r\n  };\r\n  render() {\r\n    const orderIds = Object.keys(this.props.order);\r\n    const total = orderIds.reduce((prevTotal, key) => {\r\n      const fish = this.props.fishes[key];\r\n      const count = this.props.order[key];\r\n      const isAvailable = fish && fish.status === 'available';\r\n      if (isAvailable) {\r\n        return prevTotal + count * fish.price;\r\n      }\r\n      return prevTotal;\r\n    }, 0);\r\n    return (\r\n      <div className=\"order-wrap\">\r\n        <h2>Order</h2>\r\n        <TransitionGroup component=\"ul\" className=\"order\">\r\n          {orderIds.map(this.renderOrder)}\r\n        </TransitionGroup>\r\n        <div className=\"total\">\r\n          Total:\r\n          <strong>{formatPrice(total)}</strong>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Order;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass AddFishForm extends React.Component {\r\n  nameRef = React.createRef();\r\n  priceRef = React.createRef();\r\n  statusRef = React.createRef();\r\n  descRef = React.createRef();\r\n  imageRef = React.createRef();\r\n\r\n  static propTypes = {\r\n    addFish: PropTypes.func,\r\n  };\r\n\r\n  createFish = (event) => {\r\n    // 1.  stop the form from submitting\r\n    event.preventDefault();\r\n    const fish = {\r\n      name: this.nameRef.current.value,\r\n      price: parseFloat(this.priceRef.current.value),\r\n      status: this.statusRef.current.value,\r\n      desc: this.descRef.current.value,\r\n      image: this.imageRef.current.value,\r\n    };\r\n    this.props.addFish(fish);\r\n    // refresh the form\r\n    event.currentTarget.reset();\r\n  };\r\n  render() {\r\n    return (\r\n      <form className=\"fish-edit\" onSubmit={this.createFish}>\r\n        <input name=\"name\" ref={this.nameRef} type=\"text\" placeholder=\"Name\" />\r\n        <input name=\"price\" ref={this.priceRef} type=\"text\" placeholder=\"Price\" />\r\n        <select name=\"status\" ref={this.statusRef}>\r\n          <option value=\"available\">Fresh!</option>\r\n          <option value=\"unavailable\">Sold Out!</option>\r\n        </select>\r\n\r\n        <textarea name=\"desc\" ref={this.descRef} placeholder=\"Desc\" />\r\n        <input name=\"image\" ref={this.imageRef} type=\"text\" placeholder=\"Image\" />\r\n        <button type=\"submit\">+ Add Fish</button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddFishForm;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass EditFishForm extends React.Component {\r\n  static propTypes = {\r\n    fish: PropTypes.shape({\r\n      image: PropTypes.string,\r\n      name: PropTypes.string,\r\n      desc: PropTypes.string,\r\n      status: PropTypes.string,\r\n      price: PropTypes.number,\r\n    }),\r\n    index: PropTypes.string,\r\n    updateFish: PropTypes.func,\r\n  };\r\n\r\n  handleChange = (event) => {\r\n    console.log(event.currentTarget.value);\r\n    // update that fish\r\n    // 1. Take a copy of the curernt fish\r\n    const updatedFish = {\r\n      ...this.props.fish,\r\n      [event.currentTarget.name]: event.currentTarget.value,\r\n    };\r\n    this.props.updateFish(this.props.index, updatedFish);\r\n  };\r\n  render() {\r\n    return (\r\n      <div className=\"fish-edit\">\r\n        <input type=\"text\" name=\"name\" onChange={this.handleChange} value={this.props.fish.name} />\r\n        <input\r\n          type=\"text\"\r\n          name=\"price\"\r\n          onChange={this.handleChange}\r\n          value={this.props.fish.price}\r\n        />\r\n        <select\r\n          type=\"text\"\r\n          name=\"status\"\r\n          onChange={this.handleChange}\r\n          value={this.props.fish.status}\r\n        >\r\n          <option value=\"available\">Fresh!</option>\r\n          <option value=\"unavailable\">Sold Out!</option>\r\n        </select>\r\n        <textarea name=\"desc\" onChange={this.handleChange} value={this.props.fish.desc} />\r\n        <input\r\n          type=\"text\"\r\n          name=\"image\"\r\n          onChange={this.handleChange}\r\n          value={this.props.fish.image}\r\n        />\r\n        <button onClick={() => this.props.deleteFish(this.props.index)}>Remove Fish</button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EditFishForm;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Login = (props) => (\r\n  <nav className=\"login\">\r\n    <h2>Inventory Login</h2>\r\n    <p>Sign in to manage your store's inventory.</p>\r\n    <button className=\"github\" onClick={() => props.authenticate('Github')}>\r\n      Log In With Github\r\n    </button>\r\n    <button className=\"twitter\" onClick={() => props.authenticate('Twitter')}>\r\n      Log In With Twitter\r\n    </button>\r\n    <button className=\"facebook\" onClick={() => props.authenticate('Facebook')}>\r\n      Log In With Facebook\r\n    </button>\r\n  </nav>\r\n);\r\n\r\nLogin.propTypes = {\r\n  authenticate: PropTypes.func.isRequired,\r\n};\r\nexport default Login;\r\n","import Rebase from 're-base';\r\nimport firebase from 'firebase';\r\n\r\nconst firebaseApp = firebase.initializeApp({\r\n  apiKey: 'AIzaSyCljo197J2V2Y3uRvHsE9SCrN-VUaNd8qI',\r\n  authDomain: 'ebwesbos.firebaseapp.com',\r\n  databaseURL: 'https://ebwesbos.firebaseio.com',\r\n});\r\n\r\nconst base = Rebase.createClass(firebaseApp.database());\r\n\r\n//named export\r\nexport { firebaseApp };\r\n\r\n//default export\r\n\r\nexport default base;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport firebase from 'firebase';\r\nimport AddFishForm from './AddFishForm';\r\nimport EditFishForm from './EditFishForm';\r\nimport Login from './Login';\r\nimport base, { firebaseApp } from '../base';\r\n\r\nclass Inventory extends React.Component {\r\n  static propTypes = {\r\n    fishes: PropTypes.object,\r\n    updateFish: PropTypes.func,\r\n    deleteFish: PropTypes.func,\r\n    loadSampleFishes: PropTypes.func,\r\n  };\r\n  state = {\r\n    uid: null,\r\n    owner: null,\r\n  };\r\n  componentDidMount() {\r\n    firebase.auth().onAuthStateChanged((user) => {\r\n      if (user) {\r\n        this.authHandler({ user });\r\n      }\r\n    });\r\n  }\r\n\r\n  authHandler = async (authData) => {\r\n    //look up current store in firebase db\r\n    const store = await base.fetch(this.props.storeId, { context: this });\r\n    console.log(store);\r\n    //claim store if it's ownerless\r\n    if (!store.owner) {\r\n      //save as own\r\n      await base.post(`${this.props.storeId}/owner`, { data: authData.user.uid });\r\n    }\r\n    //set state of the inventory component to reflect the current user\r\n    this.setState({\r\n      uid: authData.user.uid,\r\n      owner: store.owner || authData.user.uid,\r\n    });\r\n  };\r\n\r\n  authenticate = (provider) => {\r\n    const AuthProvider = new firebase.auth[`${provider}AuthProvider`]();\r\n    firebaseApp.auth().signInWithPopup(AuthProvider).then(this.authHandler);\r\n  };\r\n  logout = async () => {\r\n    console.log('logging out');\r\n    await firebase.auth().signOut();\r\n    this.setState({ uid: null });\r\n  };\r\n  render() {\r\n    const logout = <button onClick={this.logout}>Log Out!</button>;\r\n    //check if logged in\r\n    if (!this.state.uid) {\r\n      return <Login authenticate={this.authenticate} />;\r\n    }\r\n    //check if they are not the owner of the stoire\r\n    if (this.state.uid !== this.state.owner) {\r\n      return (\r\n        <div>\r\n          <p>Sorry you are not the owner!</p>\r\n          {logout}\r\n        </div>\r\n      );\r\n    }\r\n    //they must be the owner, so render the inventory\r\n    return (\r\n      <div className=\"inventory\">\r\n        <h2>Inventory</h2>\r\n        {logout}\r\n        {Object.keys(this.props.fishes).map((key) => (\r\n          <EditFishForm\r\n            key={key}\r\n            index={key}\r\n            fish={this.props.fishes[key]}\r\n            updateFish={this.props.updateFish}\r\n            deleteFish={this.props.deleteFish}\r\n            removeFromOrder={this.props.removeFromOrder}\r\n          />\r\n        ))}\r\n        <AddFishForm addFish={this.props.addFish} />\r\n        <button onClick={this.props.loadSampleFishes}>Load Sample Fishes</button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Inventory;\r\n","// This is just some sample data so you don't have to think of your own!\r\nconst fishes = {\r\n  fish1: {\r\n    name: \"Pacific Halibut\",\r\n    image: \"/images/hali.jpg\",\r\n    desc:\r\n      \"Everyone’s favorite white fish. We will cut it to the size you need and ship it.\",\r\n    price: 1724,\r\n    status: \"available\"\r\n  },\r\n\r\n  fish2: {\r\n    name: \"Lobster\",\r\n    image: \"/images/lobster.jpg\",\r\n    desc:\r\n      \"These tender, mouth-watering beauties are a fantastic hit at any dinner party.\",\r\n    price: 3200,\r\n    status: \"available\"\r\n  },\r\n\r\n  fish3: {\r\n    name: \"Sea Scallops\",\r\n    image: \"/images/scallops.jpg\",\r\n    desc:\r\n      \"Big, sweet and tender. True dry-pack scallops from the icey waters of Alaska. About 8-10 per pound\",\r\n    price: 1684,\r\n    status: \"unavailable\"\r\n  },\r\n\r\n  fish4: {\r\n    name: \"Mahi Mahi\",\r\n    image: \"/images/mahi.jpg\",\r\n    desc:\r\n      \"Lean flesh with a mild, sweet flavor profile, moderately firm texture and large, moist flakes. \",\r\n    price: 1129,\r\n    status: \"available\"\r\n  },\r\n\r\n  fish5: {\r\n    name: \"King Crab\",\r\n    image: \"/images/crab.jpg\",\r\n    desc:\r\n      \"Crack these open and enjoy them plain or with one of our cocktail sauces\",\r\n    price: 4234,\r\n    status: \"available\"\r\n  },\r\n\r\n  fish6: {\r\n    name: \"Atlantic Salmon\",\r\n    image: \"/images/salmon.jpg\",\r\n    desc:\r\n      \"This flaky, oily salmon is truly the king of the sea. Bake it, grill it, broil it...as good as it gets!\",\r\n    price: 1453,\r\n    status: \"available\"\r\n  },\r\n\r\n  fish7: {\r\n    name: \"Oysters\",\r\n    image: \"/images/oysters.jpg\",\r\n    desc: \"A soft plump oyster with a sweet salty flavor and a clean finish.\",\r\n    price: 2543,\r\n    status: \"available\"\r\n  },\r\n\r\n  fish8: {\r\n    name: \"Mussels\",\r\n    image: \"/images/mussels.jpg\",\r\n    desc:\r\n      \"The best mussels from the Pacific Northwest with a full-flavored and complex taste.\",\r\n    price: 425,\r\n    status: \"available\"\r\n  },\r\n\r\n  fish9: {\r\n    name: \"Jumbo Prawns\",\r\n    image: \"/images/prawns.jpg\",\r\n    desc:\r\n      \"With 21-25 two bite prawns in each pound, these sweet morsels are perfect for shish-kabobs.\",\r\n    price: 2250,\r\n    status: \"available\"\r\n  }\r\n};\r\n\r\nexport default fishes;\r\n","import React from 'react';\r\nimport { PropTypes } from 'prop-types';\r\nimport { formatPrice } from '../helpers';\r\n\r\nclass Fish extends React.Component {\r\n  static propTypes = {\r\n    details: PropTypes.shape({\r\n      image: PropTypes.string,\r\n      name: PropTypes.string,\r\n      desc: PropTypes.string,\r\n      status: PropTypes.string,\r\n      price: PropTypes.number,\r\n    }),\r\n    addToOrder: PropTypes.func,\r\n  };\r\n  render() {\r\n    const { image, name, price, desc, status } = this.props.details;\r\n\r\n    const isAvailable = status === 'available';\r\n    return (\r\n      <li className=\"menu-fish\">\r\n        <img src={image} alt={name} />\r\n        <h3 className=\"fish-name\">\r\n          {name}\r\n          <span className=\"price\">{formatPrice(price)}</span>\r\n        </h3>\r\n        <p>{desc}</p>\r\n        <button disabled={!isAvailable} onClick={() => this.props.addToOrder(this.props.index)}>\r\n          {isAvailable ? 'Add To Order' : 'Sold Out!'}{' '}\r\n        </button>\r\n      </li>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Fish;\r\n","import React from 'react';\r\nimport propTypes from 'prop-types';\r\nimport Header from './Header';\r\nimport Order from './Order';\r\nimport Inventory from './Inventory';\r\nimport sampleFishes from '../sample-fishes';\r\nimport Fish from './Fish';\r\nimport base from '../base';\r\n\r\nclass App extends React.Component {\r\n  state = {\r\n    fishes: {},\r\n    order: {},\r\n  };\r\n\r\n  static propTypes = {\r\n    match: propTypes.object,\r\n  };\r\n  componentDidMount() {\r\n    const { params } = this.props.match;\r\n\r\n    //reinstate localstorage\r\n    const localStorageRef = localStorage.getItem(params.storeId);\r\n    if (localStorageRef) {\r\n      this.setState({ order: JSON.parse(localStorageRef) });\r\n    }\r\n    this.ref = base.syncState(`${params.storeId}/fishes`, {\r\n      context: this,\r\n      state: 'fishes',\r\n    });\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    console.log(this.state.order);\r\n    localStorage.setItem(this.props.match.params.storeId, JSON.stringify(this.state.order));\r\n\r\n    console.log('updated');\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    base.removeBinding(this.ref);\r\n  }\r\n\r\n  addFish = (fish) => {\r\n    // 1. Take a copy of the existing state\r\n    const fishes = { ...this.state.fishes };\r\n    // 2. Add our new fish to that fishes variable\r\n    fishes[`fish${Date.now()}`] = fish;\r\n    // 3. Set the new fishes object to state\r\n    this.setState({ fishes });\r\n  };\r\n\r\n  updateFish = (key, updatedFish) => {\r\n    // take a copy of current state\r\n    const fishes = {\r\n      ...this.state.fishes,\r\n    };\r\n    //update state\r\n    fishes[key] = updatedFish;\r\n    //set that to state\r\n    this.setState({ fishes });\r\n  };\r\n\r\n  deleteFish = (key) => {\r\n    // 1. take a copy of state\r\n    const fishes = { ...this.state.fishes };\r\n    //update the state\r\n    fishes[key] = null;\r\n    // update state\r\n    this.setState({ fishes });\r\n  };\r\n\r\n  loadSampleFishes = () => {\r\n    this.setState({ fishes: sampleFishes });\r\n  };\r\n\r\n  addToOrder = (key) => {\r\n    // 1. take a copy of state\r\n    const order = { ...this.state.order };\r\n    // 2. Either add to the order, or update the number in our order\r\n    order[key] = order[key] + 1 || 1;\r\n    // 3. Call setState to update our state object\r\n    this.setState({ order });\r\n  };\r\n  removeFromOrder = (key) => {\r\n    // 1. take a copy of state\r\n    const order = { ...this.state.order };\r\n    // 2. remove that itemf from order\r\n    delete order[key];\r\n    // 3. Call setState to update our state object\r\n    this.setState({ order });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"catch-of-the-day\">\r\n        <div className=\"menu\">\r\n          <Header tagline=\"Fresh Seafood Market\" />\r\n          <ul className=\"fishes\">\r\n            {Object.keys(this.state.fishes).map((key) => (\r\n              <Fish\r\n                key={key}\r\n                index={key}\r\n                details={this.state.fishes[key]}\r\n                addToOrder={this.addToOrder}\r\n              />\r\n            ))}\r\n          </ul>\r\n        </div>\r\n        <Order\r\n          fishes={this.state.fishes}\r\n          order={this.state.order}\r\n          removeFromOrder={this.removeFromOrder}\r\n        />\r\n        <Inventory\r\n          addFish={this.addFish}\r\n          updateFish={this.updateFish}\r\n          deleteFish={this.deleteFish}\r\n          loadSampleFishes={this.loadSampleFishes}\r\n          fishes={this.state.fishes}\r\n          storeId={this.props.match.params.storeId}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\n\r\nconst NotFound = () => (\r\n  <div>\r\n    <h2>Not found</h2>\r\n  </div>\r\n);\r\nexport default NotFound;\r\n","import React from 'react';\r\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\r\nimport StorePicker from './StorePicker';\r\nimport App from './App';\r\nimport NotFound from './NotFound';\r\n\r\nconst Router = () => (\r\n  <BrowserRouter>\r\n    <Switch>\r\n      <Route exact path=\"/\" component={StorePicker} />\r\n      <Route path=\"/store/:storeId\" component={App} />\r\n      <Route component={NotFound} />\r\n    </Switch>\r\n  </BrowserRouter>\r\n);\r\n\r\nexport default Router;\r\n","import React from 'react';\r\nimport { render } from 'react-dom';\r\nimport Router from './components/Router.js';\r\nimport './css/style.css';\r\n\r\nrender(<Router />, document.querySelector('#main'));\r\n"],"sourceRoot":""}